name: Sonar Scan

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # âœ… Added manual trigger

jobs:
  build:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history is needed for better analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install Sonar Scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          export PATH=$HOME/sonar-scanner-5.0.1.3006-linux/bin:$PATH
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Build with Ant
        run: |
          ant -f AntSpringMVC/build.xml

      - name: Run Sonar Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=jenkins-testing-antspringmvc \
            -Dsonar.organization=jeetcl \
            -Dsonar.sources=AntSpringMVC/src \
            -Dsonar.tests=AntSpringMVC/src/com/mkyong/test \
            -Dsonar.java.binaries=AntSpringMVC/war/WEB-INF/classes \
            -Dsonar.java.libraries=AntSpringMVC/lib/*.jar \
            -Dsonar.junit.reportPaths=AntSpringMVC/report/TEST-*.xml \
            -Dsonar.coverage.jacoco.xmlReportPaths=AntSpringMVC/target/jacoco.xml \
            -Dsonar.jacoco.reportPaths=AntSpringMVC/target/jacoco.exec \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
